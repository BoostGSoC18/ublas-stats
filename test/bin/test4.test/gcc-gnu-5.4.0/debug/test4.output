test_matrix_vector
double, unbounded_array
std::complex<double>, unbounded_array
double, std::vector
std::complex<double>, std::vector
test_matrix
double, unbounded_array
m1 = m2 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.assign_temporary (m2) = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.swap (m2) = [3,3]((1,0,0),(0,5,0),(0,0,9)) [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.zero_matrix = [3,3]((0,0,0),(0,0,0),(0,0,0))
- m1 = [3,3]((-1,0,0),(0,-5,0),(0,0,-9))
conj (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 + m2 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m1 - m2 = [3,3]((0,0,0),(0,0,0),(0,0,0))
1. * m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
N * m1 = [3,3]((3,0,0),(0,15,0),(0,0,27))
m1 * 1. = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 * N = [3,3]((3,0,0),(0,15,0),(0,0,27))
m2 += m1 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m2 -= m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m2 = m2 + m1 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m2 = m2 - m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 *= 1. = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 *= N = [3,3]((3,0,0),(0,15,0),(0,0,27))
trans (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
herm (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
prod (m1, m2) = [3,3]((1,0,0),(0,25,0),(0,0,81))
m1 = m2 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.assign_temporary (m2) = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.swap (m2) = [3,3]((1,0,0),(0,5,0),(0,0,9)) [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.zero_matrix = [3,3]((0,0,0),(0,0,0),(0,0,0))
- m1 = [3,3]((-1,0,0),(0,-5,0),(0,0,-9))
conj (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 + m2 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m1 - m2 = [3,3]((0,0,0),(0,0,0),(0,0,0))
1. * m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
N * m1 = [3,3]((3,0,0),(0,15,0),(0,0,27))
m1 * 1. = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 * N = [3,3]((3,0,0),(0,15,0),(0,0,27))
m2 += m1 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m2 -= m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m2 = m2 + m1 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m2 = m2 - m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 *= 1. = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 *= N = [3,3]((3,0,0),(0,15,0),(0,0,27))
trans (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
herm (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
prod (m1, m2) = [3,3]((1,0,0),(0,25,0),(0,0,81))
std::complex<double>, unbounded_array
m1 = m2 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.assign_temporary (m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.swap (m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0))) [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.zero_matrix = [3,3](((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)))
- m1 = [3,3](((-1,-0),(0,0),(0,0)),((0,0),(-5,-0),(0,0)),((0,0),(0,0),(-9,-0)))
conj (m1) = [3,3](((1,-0),(0,0),(0,0)),((0,0),(5,-0),(0,0)),((0,0),(0,0),(9,-0)))
m1 + m2 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m1 - m2 = [3,3](((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)))
1. * m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
N * m1 = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
m1 * 1. = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 * N = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
m2 += m1 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m2 -= m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m2 = m2 + m1 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m2 = m2 - m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 *= 1. = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 *= N = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
trans (m1) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
herm (m1) = [3,3](((1,-0),(0,0),(0,0)),((0,0),(5,-0),(0,0)),((0,0),(0,0),(9,-0)))
prod (m1, m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(25,0),(0,0)),((0,0),(0,0),(81,0)))
m1 = m2 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.assign_temporary (m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.swap (m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0))) [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.zero_matrix = [3,3](((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)))
- m1 = [3,3](((-1,-0),(0,0),(0,0)),((0,0),(-5,-0),(0,0)),((0,0),(0,0),(-9,-0)))
conj (m1) = [3,3](((1,-0),(0,0),(0,0)),((0,0),(5,-0),(0,0)),((0,0),(0,0),(9,-0)))
m1 + m2 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m1 - m2 = [3,3](((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)))
1. * m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
N * m1 = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
m1 * 1. = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 * N = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
m2 += m1 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m2 -= m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m2 = m2 + m1 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m2 = m2 - m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 *= 1. = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 *= N = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
trans (m1) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
herm (m1) = [3,3](((1,-0),(0,0),(0,0)),((0,0),(5,-0),(0,0)),((0,0),(0,0),(9,-0)))
prod (m1, m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(25,0),(0,0)),((0,0),(0,0),(81,0)))
double, std::vector
m1 = m2 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.assign_temporary (m2) = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.swap (m2) = [3,3]((1,0,0),(0,5,0),(0,0,9)) [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.zero_matrix = [3,3]((0,0,0),(0,0,0),(0,0,0))
- m1 = [3,3]((-1,0,0),(0,-5,0),(0,0,-9))
conj (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 + m2 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m1 - m2 = [3,3]((0,0,0),(0,0,0),(0,0,0))
1. * m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
N * m1 = [3,3]((3,0,0),(0,15,0),(0,0,27))
m1 * 1. = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 * N = [3,3]((3,0,0),(0,15,0),(0,0,27))
m2 += m1 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m2 -= m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m2 = m2 + m1 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m2 = m2 - m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 *= 1. = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 *= N = [3,3]((3,0,0),(0,15,0),(0,0,27))
trans (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
herm (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
prod (m1, m2) = [3,3]((1,0,0),(0,25,0),(0,0,81))
m1 = m2 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.assign_temporary (m2) = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.swap (m2) = [3,3]((1,0,0),(0,5,0),(0,0,9)) [3,3]((1,0,0),(0,5,0),(0,0,9))
m1.zero_matrix = [3,3]((0,0,0),(0,0,0),(0,0,0))
- m1 = [3,3]((-1,0,0),(0,-5,0),(0,0,-9))
conj (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 + m2 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m1 - m2 = [3,3]((0,0,0),(0,0,0),(0,0,0))
1. * m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
N * m1 = [3,3]((3,0,0),(0,15,0),(0,0,27))
m1 * 1. = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 * N = [3,3]((3,0,0),(0,15,0),(0,0,27))
m2 += m1 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m2 -= m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m2 = m2 + m1 = [3,3]((2,0,0),(0,10,0),(0,0,18))
m2 = m2 - m1 = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 *= 1. = [3,3]((1,0,0),(0,5,0),(0,0,9))
m1 *= N = [3,3]((3,0,0),(0,15,0),(0,0,27))
trans (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
herm (m1) = [3,3]((1,0,0),(0,5,0),(0,0,9))
prod (m1, m2) = [3,3]((1,0,0),(0,25,0),(0,0,81))
std::complex<double>, std::vector
m1 = m2 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.assign_temporary (m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.swap (m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0))) [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.zero_matrix = [3,3](((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)))
- m1 = [3,3](((-1,-0),(0,0),(0,0)),((0,0),(-5,-0),(0,0)),((0,0),(0,0),(-9,-0)))
conj (m1) = [3,3](((1,-0),(0,0),(0,0)),((0,0),(5,-0),(0,0)),((0,0),(0,0),(9,-0)))
m1 + m2 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m1 - m2 = [3,3](((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)))
1. * m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
N * m1 = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
m1 * 1. = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 * N = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
m2 += m1 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m2 -= m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m2 = m2 + m1 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m2 = m2 - m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 *= 1. = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 *= N = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
trans (m1) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
herm (m1) = [3,3](((1,-0),(0,0),(0,0)),((0,0),(5,-0),(0,0)),((0,0),(0,0),(9,-0)))
prod (m1, m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(25,0),(0,0)),((0,0),(0,0),(81,0)))
m1 = m2 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.assign_temporary (m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.swap (m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0))) [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1.zero_matrix = [3,3](((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)))
- m1 = [3,3](((-1,-0),(0,0),(0,0)),((0,0),(-5,-0),(0,0)),((0,0),(0,0),(-9,-0)))
conj (m1) = [3,3](((1,-0),(0,0),(0,0)),((0,0),(5,-0),(0,0)),((0,0),(0,0),(9,-0)))
m1 + m2 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m1 - m2 = [3,3](((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)),((0,0),(0,0),(0,0)))
1. * m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
N * m1 = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
m1 * 1. = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 * N = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
m2 += m1 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m2 -= m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m2 = m2 + m1 = [3,3](((2,0),(0,0),(0,0)),((0,0),(10,0),(0,0)),((0,0),(0,0),(18,0)))
m2 = m2 - m1 = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 *= 1. = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
m1 *= N = [3,3](((3,0),(0,0),(0,0)),((0,0),(15,0),(0,0)),((0,0),(0,0),(27,0)))
trans (m1) = [3,3](((1,0),(0,0),(0,0)),((0,0),(5,0),(0,0)),((0,0),(0,0),(9,0)))
herm (m1) = [3,3](((1,-0),(0,0),(0,0)),((0,0),(5,-0),(0,0)),((0,0),(0,0),(9,-0)))
prod (m1, m2) = [3,3](((1,0),(0,0),(0,0)),((0,0),(25,0),(0,0)),((0,0),(0,0),(81,0)))

EXIT STATUS: 0
